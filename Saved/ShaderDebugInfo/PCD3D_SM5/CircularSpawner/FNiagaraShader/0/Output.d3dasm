//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   uint UpdateStartInstance;          // Offset:  156 Size:     4
//   uint SpawnedInstances;             // Offset:  160 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  164 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  168 Size:     4
//   int NumEventsPerParticle;          // Offset:  172 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  176 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  180 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  184 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  188 Size:     4
//   float MinTime_LatheProfile;        // Offset:  192 Size:     4 [unused]
//   float MaxTime_LatheProfile;        // Offset:  196 Size:     4 [unused]
//   float InvTimeRange_LatheProfile;   // Offset:  200 Size:     4 [unused]
//   float2 Dimensions_TEXTURE_VAR;     // Offset:  208 Size:     8 [unused]
//   float MinTime_Color_ColorCurve;    // Offset:  216 Size:     4
//   float MaxTime_Color_ColorCurve;    // Offset:  220 Size:     4 [unused]
//   float InvTimeRange_Color_ColorCurve;// Offset:  224 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   12 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   16 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   20 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   24 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   28 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   32 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   36 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   40 Size:     4 [unused]
//   float4 Engine_Owner_Position;      // Offset:   48 Size:    16
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   64 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   80 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   96 Size:    16 [unused]
//   float Constants_Emitter_CalculateSizeByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:  112 Size:     4 [unused]
//   float Constants_Emitter_CalculateSizeByMass_MassModulation;// Offset:  116 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_SpriteSizeModulation;// Offset:  128 Size:    16
//   float Constants_Emitter_CalculateSizeByMass_Width;// Offset:  144 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Height;// Offset:  148 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Depth;// Offset:  152 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_ModelProportions;// Offset:  160 Size:    16 [unused]
//   float4 Constants_Emitter_CalculateSizeByMass_InitialModelDimensions;// Offset:  176 Size:    16 [unused]
//   int Constants_Emitter_CylinderLocation_RandomSeed;// Offset:  192 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  196 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  200 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  204 Size:     4 [unused]
//   float4 Constants_Emitter_CylinderLocation_Offset;// Offset:  208 Size:    16 [unused]
//   float4 Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  224 Size:    16 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  240 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  304 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  368 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  432 Size:    64 [unused]
//   float4 Constants_Emitter_UniformRangedVector2D_Minimum;// Offset:  496 Size:    16
//   float4 Constants_Emitter_UniformRangedVector2D_Maximum;// Offset:  512 Size:    16
//   int Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset:  528 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:  532 Size:     4
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  536 Size:     4
//   float Emitter_AlphaScale;          // Offset:  540 Size:     4
//   float Constants_Emitter_RecreateCameraProjection_Fov;// Offset:  544 Size:     4
//   float4 Constants_Emitter_RecreateCameraProjection_RightVector;// Offset:  560 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_UpVector;// Offset:  576 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset:  592 Size:    16
//   float Engine_Time;                 // Offset:  608 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  612 Size:     4 [unused]
//   int Engine_ExecutionCount;         // Offset:  616 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  620 Size:     4 [unused]
//   float Emitter_SpawnInterval;       // Offset:  624 Size:     4
//   float Emitter_InterpSpawnStartDt;  // Offset:  628 Size:     4
//   int Emitter_SpawnGroup;            // Offset:  632 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  636 Size:     4
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:  640 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:  644 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:  648 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  652 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  656 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:  660 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:  664 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:  668 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:  672 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:  676 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:  680 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  688 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:  704 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_SpriteSize;// Offset:  720 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:  736 Size:    16 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:  752 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_MassModulation;// Offset:  756 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_SpriteSizeModulation;// Offset:  768 Size:    16 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Width;// Offset:  784 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Height;// Offset:  788 Size:     4 [unused]
//   float PREV_Constants_Emitter_CalculateSizeByMass_Depth;// Offset:  792 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_ModelProportions;// Offset:  800 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_CalculateSizeByMass_InitialModelDimensions;// Offset:  816 Size:    16 [unused]
//   int PREV_Constants_Emitter_CylinderLocation_RandomSeed;// Offset:  832 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  836 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  840 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  844 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CylinderLocation_Offset;// Offset:  848 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  864 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  880 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  944 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset: 1008 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset: 1072 Size:    64 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Minimum;// Offset: 1136 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Maximum;// Offset: 1152 Size:    16 [unused]
//   int PREV_Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset: 1168 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset: 1172 Size:     4 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset: 1176 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset: 1180 Size:     4 [unused]
//   float PREV_Constants_Emitter_RecreateCameraProjection_Fov;// Offset: 1184 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_RightVector;// Offset: 1200 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_UpVector;// Offset: 1216 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset: 1232 Size:    16 [unused]
//   float PREV_Engine_Time;            // Offset: 1248 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset: 1252 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset: 1256 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset: 1260 Size:     4 [unused]
//   float PREV_Emitter_SpawnInterval;  // Offset: 1264 Size:     4 [unused]
//   float PREV_Emitter_InterpSpawnStartDt;// Offset: 1268 Size:     4 [unused]
//   int PREV_Emitter_SpawnGroup;       // Offset: 1272 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset: 1276 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_TEXTURE_VAR               sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// Texture_TEXTURE_VAR               texture  float4          2d             t2      1 
// CurveLUT_Color_ColorCurve         texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB1[40], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 10
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[9].w
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.y, cb0[11].zzzz, u2.yxzw
iadd r1.x, r0.y, cb0[10].x
iadd r0.z, r1.x, cb0[9].w
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 11, 12), cb0[10].yyyy, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r0.w, r2.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.zzzz, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r1.w, r2.wwww, t0.yzwx
    imad r2.xyzw, l(13, 14, 15, 17), cb0[10].yyyy, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.x, r2.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r2.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t0.yzxw
    ishl r3.xyzw, cb0[10].yzzz, l(4, 1, 2, 3)
    iadd r3.x, r0.x, r3.x
    ld_indexable(buffer)(float,float,float,float) r3.x, r3.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
    ld_indexable(buffer)(sint,sint,sint,sint) r4.x, r0.xxxx, t1.xyzw
    imad r4.yz, l(0, 18, 19, 0), cb0[10].yyyy, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.y, r4.zzzz, t0.yxzw
    add r0.z, r0.z, cb1[33].y
    max r4.y, r0.w, l(0.000010)
    add r4.z, r4.y, l(-0.000100)
    lt r4.z, r0.z, r4.z
    div r4.y, r0.z, r4.y
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t2.xyzw, s0, l(0.000000)
    add r4.w, r4.y, -cb0[13].z
    mul_sat r4.w, r4.w, cb0[14].x
    mul r5.w, r4.w, l(127.000000)
    round_ni r5.w, r5.w
    lt r6.w, r5.w, l(127.000000)
    add r7.x, r5.w, l(1.000000)
    mad r4.w, r4.w, l(127.000000), -r5.w
    mul r7.y, r5.w, l(4.000000)
    mul r7.x, r7.x, l(4.000000)
    movc r6.w, r6.w, r7.x, l(508.000000)
    ftou r7.x, r7.y
    ld_indexable(buffer)(float,float,float,float) r7.x, r7.xxxx, t3.xyzw
    mad r8.xyz, r5.wwww, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r8.xyz, r8.xyzx
    ld_indexable(buffer)(float,float,float,float) r7.y, r8.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r8.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r7.w, r8.zzzz, t3.yzwx
    ftou r5.w, r6.w
    ld_indexable(buffer)(float,float,float,float) r8.x, r5.wwww, t3.xyzw
    add r9.xyz, r6.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r9.xyz, r9.xyzx
    ld_indexable(buffer)(float,float,float,float) r8.y, r9.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.zzzz, t3.yzwx
    add r8.xyzw, -r7.xyzw, r8.xyzw
    mad r7.xyzw, r4.wwww, r8.xyzw, r7.xyzw
    mul r6.yzw, r6.xxyz, r7.xxyz
    mul r4.w, r7.w, cb1[33].z
    mul r4.w, r4.w, cb1[33].w
    mov r5.z, -r5.y
    add r5.zw, r5.xxxz, l(0.000000, 0.000000, -0.500000, 0.500000)
    mul r7.x, cb1[34].x, l(0.008727)
    sincos r7.x, r8.x, r7.x
    div r7.x, r7.x, r8.x
    mul r5.zw, r5.zzzw, r7.xxxx
    add r5.zw, r5.zzzw, r5.zzzw
    min r7.xy, |r5.zwzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r7.zw, |r5.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r7.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r7.zzzw
    mul r7.xy, r7.zwzz, r7.xyxx
    mul r7.zw, r7.xxxy, r7.xxxy
    mad r8.xy, r7.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r8.xy, r7.zwzz, r8.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r8.xy, r7.zwzz, r8.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r7.zw, r7.zzzw, r8.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r8.xy, r7.zwzz, r7.xyxx
    lt r8.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r5.zzzw|
    mad r8.xy, r8.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r8.xy, r8.zwzz, r8.xyxx
    mad r7.xy, r7.xyxx, r7.zwzz, r8.xyxx
    min r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    lt r5.zw, r5.zzzw, -r5.zzzw
    movc r5.zw, r5.zzzw, -r7.xxxy, r7.xxxy
    mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    sincos r7.x, r8.x, r5.z
    div r5.z, r7.x, r8.x
    sincos r7.x, r8.x, r5.w
    div r5.w, r7.x, r8.x
    mul r5.zw, r6.xxxx, r5.zzzw
    mul r7.xyz, r5.wwww, cb1[36].xyzx
    mad r7.xyz, r5.zzzz, cb1[35].xyzx, r7.xyzx
    mad r7.xyz, r6.xxxx, cb1[37].xyzx, r7.xyzx
    add r7.xyz, r7.xyzx, cb1[3].xyzx
    if_nz r4.z
      imm_atomic_iadd r1.x, u2, cb0[11].w, l(1)
    endif 
    iadd r4.z, r1.x, cb0[9].w
    store_uav_typed u1.xyzw, r4.zzzz, r0.zzzz
    iadd r0.z, r1.x, cb0[10].z
    iadd r0.z, r0.z, cb0[9].w
    store_uav_typed u1.xyzw, r0.zzzz, r6.yyyy
    iadd r3.yzw, r1.xxxx, r3.yyzw
    iadd r3.yzw, r3.yyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r3.yyyy, r6.zzzz
    imad r5.zw, l(0, 0, 3, 5), cb0[10].zzzz, r1.xxxx
    iadd r5.zw, r5.zzzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r5.zzzz, r6.wwww
    store_uav_typed u1.xyzw, r3.zzzz, r4.wwww
    store_uav_typed u1.xyzw, r5.wwww, r0.wwww
    imad r6.xyzw, l(6, 7, 9, 10), cb0[10].zzzz, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r6.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r6.yyyy, r4.yyyy
    store_uav_typed u1.xyzw, r3.wwww, r7.xxxx
    store_uav_typed u1.xyzw, r6.zzzz, r7.yyyy
    store_uav_typed u1.xyzw, r6.wwww, r7.zzzz
    imad r6.xyzw, l(11, 12, 13, 14), cb0[10].zzzz, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r6.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r6.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r6.zzzz, r2.xxxx
    store_uav_typed u1.xyzw, r6.wwww, r2.yyyy
    imad r6.xyzw, l(15, 17, 18, 19), cb0[10].zzzz, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r6.xxxx, r2.zzzz
    ishl r0.z, cb0[10].z, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[9].w
    store_uav_typed u1.xyzw, r0.zzzz, r3.xxxx
    store_uav_typed u1.xyzw, r6.yyyy, r2.wwww
    store_uav_typed u0.xyzw, r4.zzzz, r4.xxxx
    store_uav_typed u1.xyzw, r6.zzzz, r5.xxxx
    store_uav_typed u1.xyzw, r6.wwww, r5.yyyy
  else 
    iadd r0.x, -r0.y, r0.x
    iadd r0.y, r0.x, cb1[39].w
    itof r0.x, r0.x
    mad r0.x, cb1[39].x, r0.x, cb1[39].y
    add r0.x, -r0.x, cb1[33].y
    add r0.z, -cb1[0].x, cb1[0].y
    imul null, r2.x, vThreadID.x, l(0x0019660d)
    imul null, r2.y, cb0[9].z, l(0x0019660d)
    iadd r1.yz, r2.xxyx, l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r2.xyz, r1.yyyy, l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0), l(0x3ca1bf79, 0x3cd48b93, 0x3dd28815, 0)
    imad r3.xyz, r1.zzzz, r2.xyzx, r1.yyyy
    imad r1.yzw, r2.xxyz, r3.xxyz, r1.zzzz
    imad r4.xyz, r3.xyzx, r1.yzwy, l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
    ishr r1.yz, r2.xxyx, l(0, 8, 8, 0)
    and r1.yz, r1.yyzy, l(0, 0x00ffffff, 0x00ffffff, 0)
    utof r1.yz, r1.yyzy
    mul r0.z, r0.z, r1.y
    mad r0.z, r0.z, l(0.000000), cb1[0].x
    add r0.w, -cb1[1].y, cb1[1].z
    mul r0.w, r0.w, r1.z
    mad r0.w, r0.w, l(0.000000), cb1[1].y
    mul r0.z, r0.z, l(360.000000)
    mul r1.y, cb1[7].y, l(997.000000)
    add r1.z, cb1[9].y, cb1[9].x
    add r1.z, r1.z, cb1[9].z
    div r1.z, l(3.000000), r1.z
    mul r2.xy, r1.zzzz, cb1[9].xyxx
    mul r2.xy, r2.xyxx, cb1[8].xyxx
    div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
    mul r1.yz, r1.yyyy, l(0.000000, 1000000.000000, 0.127324, 0.000000)
    log r1.yz, r1.yyzy
    mul r1.yz, r1.yyzy, l(0.000000, 0.333333, 0.333333, 0.000000)
    exp r1.yz, r1.yyzy
    mul r2.xy, r1.yyyy, r2.xyxx
    mul r1.y, r1.z, r1.z
    mul r1.y, r1.y, l(0.400000)
    add r3.xy, -cb1[31].xyxx, cb1[32].xyxx
    imad r2.w, r1.w, r2.z, r3.z
    ishr r1.zw, r2.zzzw, l(0, 0, 8, 8)
    and r1.zw, r1.zzzw, l(0, 0, 0x00ffffff, 0x00ffffff)
    utof r1.zw, r1.zzzw
    mul r1.zw, r3.xxxy, r1.zzzw
    mad r3.xy, r1.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[31].xyxx
    max r1.z, r0.w, l(0.000010)
    add r1.w, r1.z, l(-0.000100)
    lt r1.w, r0.x, r1.w
    div r1.z, r0.x, r1.z
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t2.xyzw, s0, l(0.000000)
    add r2.z, r1.z, -cb0[13].z
    mul_sat r2.z, r2.z, cb0[14].x
    mul r2.w, r2.z, l(127.000000)
    round_ni r2.w, r2.w
    lt r3.w, r2.w, l(127.000000)
    add r4.w, r2.w, l(1.000000)
    mad r2.z, r2.z, l(127.000000), -r2.w
    mul r5.x, r2.w, l(4.000000)
    mul r4.w, r4.w, l(4.000000)
    movc r3.w, r3.w, r4.w, l(508.000000)
    ftou r4.w, r5.x
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.wwww, t3.xyzw
    mad r6.xyz, r2.wwww, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r6.xyz, r6.xyzx
    ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.w, r6.zzzz, t3.yzwx
    ftou r2.w, r3.w
    ld_indexable(buffer)(float,float,float,float) r6.x, r2.wwww, t3.xyzw
    add r7.xyz, r3.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r7.xyz, r7.xyzx
    ld_indexable(buffer)(float,float,float,float) r6.y, r7.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r7.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.w, r7.zzzz, t3.yzwx
    add r6.xyzw, -r5.xyzw, r6.xyzw
    mad r5.xyzw, r2.zzzz, r6.xyzw, r5.xyzw
    mul r4.yzw, r4.xxyz, r5.xxyz
    mul r2.z, r5.w, cb1[33].z
    mul r2.z, r2.z, cb1[33].w
    mov r3.z, -r3.y
    add r3.zw, r3.xxxz, l(0.000000, 0.000000, -0.500000, 0.500000)
    mul r2.w, cb1[34].x, l(0.008727)
    sincos r5.x, r6.x, r2.w
    div r2.w, r5.x, r6.x
    mul r3.zw, r2.wwww, r3.zzzw
    add r3.zw, r3.zzzw, r3.zzzw
    min r5.xy, |r3.zwzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r5.zw, |r3.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r5.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r5.zzzw
    mul r5.xy, r5.zwzz, r5.xyxx
    mul r5.zw, r5.xxxy, r5.xxxy
    mad r6.xy, r5.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r5.zw, r5.zzzw, r6.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r6.xy, r5.zwzz, r5.xyxx
    lt r6.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r3.zzzw|
    mad r6.xy, r6.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r6.xy, r6.zwzz, r6.xyxx
    mad r5.xy, r5.xyxx, r5.zwzz, r6.xyxx
    min r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    lt r3.zw, r3.zzzw, -r3.zzzw
    movc r3.zw, r3.zzzw, -r5.xxxy, r5.xxxy
    mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    sincos r5.x, r6.x, r3.z
    div r2.w, r5.x, r6.x
    mul r2.w, r4.x, r2.w
    sincos r5.x, r6.x, r3.w
    div r3.z, r5.x, r6.x
    mul r3.z, r4.x, r3.z
    mul r5.xyz, r3.zzzz, cb1[36].xyzx
    mad r5.xyz, r2.wwww, cb1[35].xyzx, r5.xyzx
    mad r5.xyz, r4.xxxx, cb1[37].xyzx, r5.xyzx
    add r5.xyz, r5.xyzx, cb1[3].xyzx
    if_nz r1.w
      imm_atomic_iadd r1.x, u2, cb0[11].w, l(1)
    endif 
    iadd r1.w, r1.x, cb0[9].w
    store_uav_typed u1.xyzw, r1.wwww, r0.xxxx
    iadd r0.x, r1.x, cb0[10].z
    iadd r0.x, r0.x, cb0[9].w
    store_uav_typed u1.xyzw, r0.xxxx, r4.yyyy
    ishl r6.xyzw, cb0[10].zzzz, l(1, 2, 3, 4)
    iadd r6.xyzw, r1.xxxx, r6.xyzw
    iadd r6.xyzw, r6.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r6.xxxx, r4.zzzz
    imad r7.xyzw, l(3, 5, 6, 7), cb0[10].zzzz, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r7.xxxx, r4.wwww
    store_uav_typed u1.xyzw, r6.yyyy, r2.zzzz
    store_uav_typed u1.xyzw, r7.yyyy, r0.wwww
    store_uav_typed u1.xyzw, r7.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r7.wwww, r1.zzzz
    store_uav_typed u1.xyzw, r6.zzzz, r5.xxxx
    imad r4.xyzw, l(9, 10, 11, 12), cb0[10].zzzz, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r4.xxxx, r5.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r5.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, r1.yyyy
    store_uav_typed u1.xyzw, r4.wwww, l(1.000000,1.000000,1.000000,1.000000)
    imad r4.xyzw, l(13, 14, 15, 17), cb0[10].zzzz, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[9].wwww
    store_uav_typed u1.xyzw, r4.xxxx, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r4.yyyy, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r4.zzzz, r0.zzzz
    store_uav_typed u1.xyzw, r6.wwww, r2.xxxx
    store_uav_typed u1.xyzw, r4.wwww, r2.yyyy
    store_uav_typed u0.xyzw, r1.wwww, r0.yyyy
    imad r0.xy, l(18, 19, 0, 0), cb0[10].zzzz, r1.xxxx
    iadd r0.xy, r0.xyxx, cb0[9].wwww
    store_uav_typed u1.xyzw, r0.xxxx, r3.xxxx
    store_uav_typed u1.xyzw, r0.yyyy, r3.yyyy
  endif 
endif 
ret 
// Approximately 290 instruction slots used
